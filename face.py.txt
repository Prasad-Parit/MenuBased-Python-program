import cv2

# Load the face detection classifier
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")

# Turn on the webcam
camera = cv2.VideoCapture(0)

# Start the adventure
while True:
    # Grab a frame from the webcam
    success, frame = camera.read()

    # If we can't get a frame, end the adventure
    if not success:
        break

    # Change the colors to shades of gray
    grayscale_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Look for faces in the gray picture
    detected_faces = face_cascade.detectMultiScale(grayscale_frame, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

    # For each face found
    for (x, y, w, h) in detected_faces:
        # Zoom in and get a close-up of just that face
        face_region = frame[y:y+h, x:x+w]

        # Add a blur to the face to protect privacy
        blurred_face = cv2.GaussianBlur(face_region, (99, 99), 20)

        # Put the blurry face back into the original picture
        frame[y:y+h, x:x+w] = blurred_face

    # Show the adventure on the screen
    cv2.imshow('Blurred Faces', frame)

    # End the adventure when the "Enter" key is pressed
    if cv2.waitKey(1) == 13:
        break

# Properly turn off the camera and close the screen
camera.release()
cv2.destroyAllWindows()
